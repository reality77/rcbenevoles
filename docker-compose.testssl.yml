version: '3.1'

# ****** SERVICES

services:
    
    # SERVICE app : notre application web
    app:
        image: reality77/rcbenevoles:dev
        environment:
            APP_DB_SERVER: db                       # Serveur de la base de données
            APP_DB_PASSWORD: rcbenevoles2017        # Mot de passe de la base de données
            APP_PATH_BASE: /rcb			    		# Chemin racine de l'application (reverse-proxy)
            APP_GENERATE_DEV_DATA: 0				# Indique si des données de test sont générées	
            APP_ADMIN_PASSWORD: testadmin
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - db
        networks:
            - backnet

    # SERVICE reverseproxy
    rproxy:
        image: rproxy:local
        volumes:
            - nginx_certs:/etc/rproxy/certs
        deploy:
            restart_policy:
                condition: on-failure
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_APP_SERVER=app
            - NGINX_APP_PORT=5000
            - NGINX_SSL_PUBLICKEY_FILE=cert.pem
            - NGINX_SSL_PRIVATEKEY_FILE=key.pem
        links:
            - app
        networks:
            - backnet

    # SERVICE db : notre base de données
    db:
        image: postgres:latest
        volumes:
            - db_data:/var/lib/postgresql/data
        restart: always
        environment:
            POSTGRES_USER: rcbenevoles
            POSTGRES_PASSWORD: rcbenevoles2017
        networks:
            - backnet

# ****** NETWORKS

networks:
    backnet:		# nom du réseau (backnet) sans parametre = reseau load-balancé par défaut


# ****** VOLUMES

volumes:
    db_data:
    nginx_certs:  
